{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/Footer.js","components/TodoApp.js","lib/service.js","lib/utils.js","index.js"],"names":["props","onSubmit","handleTodoSubmit","aria-label","type","autoFocus","value","currentTodo","onChange","handleNewTodoChange","className","placeholder","TodoItem","isComplete","id","checked","handleToggle","htmlFor","name","onClick","handleDelete","todos","map","todo","remaining","to","TodoApp","state","bind","axios","get","then","data","setState","catch","error","evt","this","target","delete","destroyTodo","filter","t","targetTodo","find","updated","put","preventDefault","newTodo","post","concat","length","role","TodoForm","path","render","match","TodoList","params","Footer","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.591f64f6.chunk.js","sourcesContent":["import React from 'react'\n\nexport default props =>\n  <form onSubmit={props.handleTodoSubmit}>\n    <input\n      aria-label=\"New Todo\"\n      type='text'\n      autoFocus\n      value={props.currentTodo}\n      onChange={props.handleNewTodoChange}\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"/>\n  </form>\n","import React from 'react'\n\nconst TodoItem = props =>\n  <li className={props.isComplete ? \"completed\" : null}>\n    <div className=\"view\">\n      <input id={`${props.id}-input`} className=\"toggle\" type=\"checkbox\"\n        checked={props.isComplete}\n        onChange={() => props.handleToggle(props.id)}/>\n      <label htmlFor={`${props.id}-input`}>\n        {props.name}\n      </label>\n      <button aria-label={`Destroy ${props.name}`} className=\"destroy\"\n        onClick={() => props.handleDelete(props.id)}></button>\n    </div>\n  </li>\n\nexport default props =>\n  <ul className=\"todo-list\" aria-label=\"Todo List\">\n    {props.todos.map(todo =>\n      <TodoItem key={todo.id} {...todo}     handleDelete={props.handleDelete}\n      handleToggle={props.handleToggle} />)}\n  </ul>\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default props =>\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      <strong>{props.remaining}</strong>\n      {props.remaining === 1 ? ' todo' : ' todos'} left\n    </span>\n    <ul className=\"filters\">\n      <li><Link to=\"/\">All</Link></li>\n      {' '}\n      <li><Link to=\"/active\">Active</Link></li>\n      {' '}\n      <li><Link to=\"/completed\">Completed</Link></li>\n    </ul>\n  </footer>\n","import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList'\nimport Footer from './Footer'\nimport {saveTodo, loadTodos, destroyTodo, updateTodo} from '../lib/service'\nimport {filterTodos} from '../lib/utils'\n\n\nexport default class TodoApp extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentTodo: '',\n      todos: []\n    }\n    this.handleNewTodoChange = this.handleNewTodoChange.bind(this)\n    this.handleTodoSubmit = this.handleTodoSubmit.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.handleToggle = this.handleToggle.bind(this)\n  }\n\n  componentDidMount () {\n    loadTodos()\n      .then(({data}) => this.setState({todos: data}))\n      .catch(() => this.setState({error: true}))\n  }\n\n  handleNewTodoChange (evt) {\n    this.setState({currentTodo: evt.target.value})\n  }\n\n  handleDelete (id) {\n    destroyTodo(id)\n      .then(() => this.setState({\n        todos: this.state.todos.filter(t => t.id !== id)\n      }))\n  }\n\n  handleToggle (id) {\n    const targetTodo = this.state.todos.find(t => t.id === id)\n    const updated = {\n      ...targetTodo,\n      isComplete: !targetTodo.isComplete\n    }\n    updateTodo(updated)\n      .then(({data}) => {\n        const todos = this.state.todos.map(\n          t => t.id === data.id ? data : t\n        )\n        this.setState({todos: todos})\n      })\n  }\n\n  handleTodoSubmit (evt) {\n    evt.preventDefault()\n    const newTodo = {name: this.state.currentTodo, isComplete: false}\n    saveTodo(newTodo)\n      .then(({data}) => this.setState({\n        todos: this.state.todos.concat(data),\n        currentTodo: ''\n      }))\n      .catch(() => this.setState({error: true}))\n  }\n\n  render () {\n    const remaining = this.state.todos.filter(t => !t.isComplete).length\n    return (\n      <Router>\n        <div>\n          <header className=\"header\">\n            <h1>todos</h1>\n            {this.state.error ? <span role=\"alert\" className='error'>Oh no!</span> : null}\n            <TodoForm\n              currentTodo={this.state.currentTodo}\n              handleTodoSubmit={this.handleTodoSubmit}\n              handleNewTodoChange={this.handleNewTodoChange}/>\n          </header>\n          <section className=\"main\">\n          <Route path='/:filter?' render={({match}) =>\n            <TodoList\n              todos={filterTodos(match.params.filter, this.state.todos)}\n              handleDelete={this.handleDelete}\n              handleToggle={this.handleToggle} />\n            } />\n          </section>\n          <Footer remaining={remaining} />\n        </div>\n      </Router>\n    )\n  }\n}\n","import axios from 'axios'\n\nexport const saveTodo = (todo) =>\n  axios.post('http://example.com/api/todos', todo)\n\nexport const loadTodos = () => \n  axios.get('http://example.com/api/todos')  \n\n\nexport const destroyTodo = (id) =>\n  axios.delete(`http://example.com/api/todos/${id}`)\n\nexport const updateTodo = (todo) =>\n  axios.put(`http://example.com/api/todos/${todo.id}`, todo)\n","export const filterTodos = (filter, todos) => filter\n  ? todos.filter(todo => todo.isComplete === (filter === 'completed'))\n  : todos\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TodoApp from './components/TodoApp'\nimport './styles.css'\n\nReactDOM.render(<TodoApp />, document.getElementById('root'))\n"],"sourceRoot":""}